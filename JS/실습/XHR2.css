@charset "UTF-8";

a:link {
    color: inherit;
    text-decoration: unset;
}

body {
    min-height: 100vh;
    background-color: rgb(28,40,51);
    color: rgb(234,236,238);
    font-family: "Pretendard Variable", Pretendard, -apple-system, BlinkMacSystemFont, system-ui, Roboto, "Helvetica Neue", "Segoe UI", "Apple SD Gothic Neo", "Noto Sans KR", "Malgun Gothic", "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", sans-serif;
    margin: unset;

    display: flex;
    flex-direction: column;
    align-items: stretch;
    justify-content: flex-start;
}

input {
    background-color: inherit;
    border: none;
    color: inherit;
    font: inherit;
    margin: unset;
    outline: none;
    padding: unset;
}

ol, ul {
    list-style-type: none;
    margin-block: unset;
    margin-inline: unset;
    padding-inline: unset;
}

#header {
    background-color: rgb(23,32,42);
    border-bottom: 0.0625rem solid rgb(33,47,61);
    padding: 1rem 1.25rem;

    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: flex-start;
}

#header > .search-form {
    border: 0.0625rem solid rgb(28, 40, 51);
    border-radius: 0.5rem;
    overflow: hidden;

    display: flex;
    align-items: stretch;
    flex-direction: row;
    justify-content: flex-start; /* input과 submit 사이 공백 없애기. */
}

#header > .spring {
    flex: 1;
}

#header > .search-form > .label {
    display: none;
}

#header > .search-form > .input {
    padding: 0.5rem 0.75rem;
}

#header > .search-form > .input:focus {
    background-color: rgb(28,40,51);
}

#header > .search-form > .submit {
    background-color: inherit;
    border-left: 0.0625rem solid rgb(33,47,61);
    cursor: pointer;
    padding: 0.5rem 0.75rem;
}

#header > .search-form > .submit:hover {
    background-color: rgb(28,40,51);
}

#header > .menu {
    border: 0.0625rem solid rgb(33,47,61);
    border-radius: 0.5rem;
    overflow: hidden;
}

#header > .menu > .item > .link {
    background-color: inherit;
    display: inline-block;
    padding: 0.5rem 1rem;
}

#header > .menu > .item > .link:hover {
    background-color: rgb(28,40,51);
}

#main {
    flex: 1;
}

#main > .table {
    width: 100%;
}

#main > .table th { /* table 요소 내의 th 요소 */
    font: inherit;
}

#main > .table > thead > tr {
    background-color: rgb(23,32,42);
}

#main > .table > thead > tr > * {
    border-bottom: 0.0625rem solid rgb(33,47,61);
    padding: 0.75rem 1rem;
    white-space: nowrap; /* menu에 width: 100%를 주어서 찌그러진 나머지 th들을 펴주는 코드 */
}

#main > .table > thead > tr > * + * {
    border-left: 0.0625rem solid rgb(33,47,61);
}

#main > .table > thead > tr > .menu {
    width: 100%;
}

#main > .table > tbody > tr:hover {
    background-color: rgb(33,47,61);
}

#main > .table > tbody > tr:nth-child(even) {
    background-color: rgb(33,47,61);
}

#main > .table > tbody > tr:nth-child(even):hover {
    background-color: rgb(39,55,70);
}

#main > .table > tbody > tr > * {
    border-bottom: 0.0625rem solid rgb(44,62,80);
    padding: 0.5rem 1.25rem;
    white-space: nowrap; /* menu에 width: 100%를 주어서 찌그러진 나머지 th들을 펴주는 코드 */
}

#main > .table > tbody > tr > * + * {
    border-left: 0.0625rem solid rgb(39,55,70);
}

#loading {
    right: 1.5rem;
    bottom: 0.5rem;
    position: fixed;
    z-index: 1;
    border-radius: 0.5rem;
    opacity: 0;
    background-color: rgb(23,32,42);
    padding: 0.75rem 1.25rem;
    pointer-events: none;

    display: flex;
    align-items: center;
    flex-direction: row;
    gap: 0.75rem;
    justify-content: flex-start;
    transition-duration: 375ms;
    transition-property: bottom, opacity;
}

#loading.visible { /* id가 loading이고 class가 visible일 때 */
    bottom: 1.5rem;
    opacity: 1;
    pointer-events: all;
}

#loading > .icon {
    width: 1.5rem;
    animation : rotate 1s linear infinite; /* keyframe 이름 , 주기 , 함수 , 반복 홧수 */

    /* 위 animation : rotate 1s linear infinite 코드는 아래와 동일함 */
    /*animation-name: rotate;*/
    /*animation-iteration-count: infinite;*/
    /*animation-duration: 1s;*/
    /*animation-timing-function: linear;*/
}

@keyframes rotate {
    from {
        transform: rotateZ(0deg);
    }
    to {
        transform: rotateZ(360deg);
    }
}